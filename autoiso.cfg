
function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; }
function devname  { regexp -s "$2" '^(\(.*\)).*$' "$1"; }

function partition_label_entry {
  if test "$realdev" != "$saved_dev" ; then
    probe -s devlabel -l $realdev
    probe -s devfs --fs $realdev
    if test "$devfs" = "exfat" -o "$devfs" = "f2fs"; then 
      set devfs="${devfs}FS !!! Many other.iso do not run on ${devfs} !!!"
    else
      set devfs="${devfs}FS"
    fi
    if test "$devlabel"; then
      set devlabel=" \"$devlabel\"";
    fi
    menuentry "${realdev}${devlabel} ${devfs}:" { true }
    set saved_dev="$realdev"
  fi
}

function loopback_dir_scan {
  lb_dir="$1"
  for ldir in ${config_directory}/"$lb_dir"/* ; do
    if ! test -f "$ldir"/if.cfg; then continue; fi
    source "$ldir"/if.cfg
    if check_iso ; then
      lb_cfg="$ldir"/loopback.cfg
      return 0
    fi
  done
  return 1
}

function loopback_iso_entry {
  realdev="$1"
  isopath="$2"
  lb_cfg=""
  
  if test -f /boot/grub/loopback.cfg; then
    lb_cfg=/boot/grub/loopback.cfg
    loopback_dir_scan loopback_bad
  elif test -f /grub/loopback.cfg; then
    lb_cfg=/grub/loopback.cfg
    loopback_dir_scan loopback_bad
  else
    loopback_dir_scan loopback
  fi
  
  if test -z $lb_cfg ; then
    return 1
  fi
  
  echo loopback.cfg $isopath: yes

  partition_label_entry

  menuentry "  ${isopath}" "$realdev" "$isopath" "$lb_cfg" {
    set iso_dev="$2"
    set iso_path="$3"
    set cfg_path="$4"

    export iso_dev
    export iso_path

    set loopname=loopiso
    
    while [ -d "(${loopname})/" ]; do
      set loopname=${loopname}_2
    done
    
    loopback $loopname "${iso_dev}${iso_path}"
    
    set root="(${loopname})"
    
    configfile $cfg_path
    loopback -d $loopname
  }
  return 0
}

function scan_isos {
  isodirs="$*"
  
  for dev in (*) ; do
    regexp -s iso_device '\((.*)\)' $dev
    
    for dir in $isodirs; do
      for file in \
          (${iso_device})/${dir}/*.iso \
          (${iso_device})/${dir}/*.ISO \
      ; do
        if ! test -f "$file"; then continue; fi
        pathname $file isopath
          
        if test -z "$dev" -o -z "$isopath"; then continue; fi
        if ! loopback loopdev_scan "$file"; then continue; fi
        
        saved_root=$root
        set root=loopdev_scan
        
        if loopback_iso_entry $dev $isopath; then true;
        else  true; fi
        
        set root="${saved_root}"
        loopback -d loopdev_scan
      done
    done
  done
  return 0
}

insmod regexp
set default=2
menuentry "=========================== autoiso-multiboot ===========================" { true }
scan_isos boot-isos boot/boot-isos bootisos boot/bootisos
